"""
–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è —Ç–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç–∞ –ø–æ–¥—Å—á–µ—Ç–∞ –∫–∞–ª–æ—Ä–∏–π
"""
import os
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

# Telegram Bot Configuration
TELEGRAM_BOT_TOKEN = os.getenv('TELEGRAM_BOT_TOKEN', '')
if not TELEGRAM_BOT_TOKEN:
    raise ValueError("TELEGRAM_BOT_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")

# OpenAI API Configuration
OPENAI_API_KEY = os.getenv('OPENAI_API_KEY', '')
if not OPENAI_API_KEY:
    raise ValueError("OPENAI_API_KEY –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")

# Database Configuration
DATABASE_URL = os.getenv('DATABASE_URL', 'sqlite:///calorie_bot.db')

# Bot Configuration
BOT_NAME = os.getenv('BOT_NAME', '–ö–∞–ª–æ—Ä–∏–∏ –ë–æ—Ç üçé')
ADMIN_USER_ID = os.getenv('ADMIN_USER_ID', '')

# Server Configuration (–¥–ª—è –¥–µ–ø–ª–æ—è)
PORT = int(os.getenv('PORT', 8000))
HOST = os.getenv('HOST', '0.0.0.0')
WEBHOOK_URL = os.getenv('WEBHOOK_URL', '')

# AI Configuration
AI_MODEL = "gpt-4o"
MAX_TOKENS = 1000

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–Ω–∞–ª–∏–∑–∞ –∫–∞–ª–æ—Ä–∏–π
# AI Configuration - English prompts for better understanding
CALORIE_PROMPT = """
You are a professional nutritionist analyzing food images. Count items PRECISELY and be EXTREMELY accurate.

COUNTING METHODOLOGY:
1. LOOK CAREFULLY at each distinct food item
2. Count slices, pieces, portions individually 
3. If food is cut/sliced, count VISIBLE pieces
4. Group similar items together (e.g., "4 sandwich pieces" not "4 different sandwiches")

VISUAL ANALYSIS RULES:
- Sliced sandwiches/bread ‚Üí count each visible slice/piece
- Pancakes/crepes ‚Üí count each individual pancake
- Fish/meat pieces ‚Üí count each separate piece  
- Beverages ‚Üí count containers (cups, glasses)

NAMING CONVENTIONS:
- "ham and cheese sandwiches" (not just "cheese" or just "ham")
- "meat-filled pancakes" (if you see filling)
- "sliced fish" (specify type if visible)
- "tea/coffee" (specify beverage type)

PORTION SIZE FORMAT:
- "4 pieces" (not "4 sandwiches" if they're cut pieces)
- "3 pancakes" (individual count)
- "2 slices" (for fish/meat)
- "1 cup" (for beverages)

RESPONSE FORMAT - strict JSON:
{
    "food_items": [
        {
            "name": "precise food name with main ingredients",
            "portion_size": "exact count with units (e.g., 4 pieces, 3 pancakes, 2 slices)",
            "calories": calorie_number,
            "proteins": protein_grams_number,
            "carbs": carbs_grams_number,
            "fats": fat_grams_number,
            "certainty": "high/medium/low"
        }
    ],
    "total_calories": total_calorie_number,
    "confidence": number_from_0_to_100,
    "analysis_notes": "what you identified and any uncertainties"
}

CRITICAL: Count each visible piece/slice/item separately. Be precise and consistent.
"""

# –≠–º–æ–¥–∑–∏ –¥–ª—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
EMOJIS = {
    'food': 'üçΩÔ∏è',
    'stats': 'üìä',
    'calendar': 'üìÖ',
    'fire': 'üî•',
    'scales': '‚öñÔ∏è',
    'chart': 'üìà',
    'settings': '‚öôÔ∏è',
    'help': '‚ùì',
    'back': '‚¨ÖÔ∏è',
    'checkmark': '‚úÖ',
    'warning': '‚ö†Ô∏è',
    'error': '‚ùå',
    'apple': 'üçé',
    'water': 'üíß',
    'muscle': 'üí™'
}
